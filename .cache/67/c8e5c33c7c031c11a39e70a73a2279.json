{"id":"ALll","dependencies":[{"name":"C:\\Users\\OponjousMan\\Desktop\\forkify-18\\package.json","includedInParent":true,"mtime":1662858148262},{"name":"C:\\Users\\OponjousMan\\Desktop\\forkify-18\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1659743945580},{"name":"../internals/to-integer-or-infinity","loc":{"line":1,"column":34,"index":34},"parent":"C:\\Users\\OponjousMan\\Desktop\\forkify-18\\node_modules\\core-js\\internals\\to-positive-integer.js","resolved":"C:\\Users\\OponjousMan\\Desktop\\forkify-18\\node_modules\\core-js\\internals\\to-integer-or-infinity.js"}],"generated":{"js":"var r=require(\"../internals/to-integer-or-infinity\"),e=RangeError;module.exports=function(n){var t=r(n);if(t<0)throw e(\"The argument can't be less than 0\");return t};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":3,"column":0},"generated":{"line":1,"column":53}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":3,"column":0},"generated":{"line":1,"column":55}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":5,"column":0},"generated":{"line":1,"column":66}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":5,"column":0},"generated":{"line":1,"column":73}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":5,"column":0},"generated":{"line":1,"column":81}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":5,"column":0},"generated":{"line":1,"column":90}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":6,"column":0},"generated":{"line":1,"column":93}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":6,"column":0},"generated":{"line":1,"column":97}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":6,"column":0},"generated":{"line":1,"column":99}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":6,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":104}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":107}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":109}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":111}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":117}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":119}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":8,"column":0},"generated":{"line":1,"column":156}},{"source":"node_modules/core-js/internals/to-positive-integer.js","original":{"line":8,"column":0},"generated":{"line":1,"column":163}}],"sources":{"node_modules/core-js/internals/to-positive-integer.js":"var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $RangeError = RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw $RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n"},"lineCount":null}},"error":null,"hash":"10d65cd446ff1d4d4730e7e7c93cd5b0","cacheData":{"env":{}}}